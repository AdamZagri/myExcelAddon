name: Formulas
description: Formulas
host: EXCEL
api_set: {}
script:
  content: |
    async function saveSettings() {
      const url = (document.getElementById("url") as HTMLInputElement).value;
      const username = (document.getElementById("username") as HTMLInputElement).value;
      const password = (document.getElementById("password") as HTMLInputElement).value;

      try {
        const response = await fetch("https://e943-185-83-220-186.ngrok-free.app/saveSettings", {
          method: "POST",
          headers: {
            "Content-Type": "application/json"
          },
          body: JSON.stringify({ url, username, password })
        });

        if (!response.ok) {
          throw new Error("Network response was not ok");
        }

        const data = await response.json();
        console.log("Settings saved successfully:", data);
      } catch (error) {
        console.error("Error saving settings:", error);
      }
    }

    /**
     * הפונקציה מבצעת פנייה לשרת ה-Node.js עם הנתונים מה-Taskpane והפרמטרים שקיבלנו מהפונקציה באקסל.
     * @customfunction
     * @param {number} year - השנה לקבלת ההזמנות.
     * @param {number} month - החודש לקבלת ההזמנות.
     * @param {string} custName - מספר הלקוח.
     * @returns {Promise<number>} - מחזירה את סכום ההזמנות ללקוח בתקופה.
     */
    async function ROTL_GET_AMMOUNT_ORDERS(year, month, custName) {
      // שליפת ההגדרות מה-Taskpane
      const url = Office.context.document.settings.get("apiUrl");
      const username = Office.context.document.settings.get("apiUsername");
      const password = Office.context.document.settings.get("apiPassword");

      try {
        // שליחת הנתונים ל-Node.js
        const response = await fetch("https://e943-185-83-220-186.ngrok-free.app/getOrders", {
          method: "POST",
          headers: {
            "Content-Type": "application/json"
          },
          body: JSON.stringify({
            year: year,
            month: month,
            custName: custName,
            apiUrl: url,
            apiUsername: username,
            apiPassword: password
          })
        });

        // בדיקה אם התשובה תקינה
        if (!response.ok) {
          throw new Error("Network response was not ok");
        }

        const data = await response.json();

        // החזרת סכום ההזמנות
        return data.totalOrders;
      } catch (error) {
        console.error("Error fetching order data:", error);
        return 0; // מחזיר 0 במקרה של שגיאה
      }
    }
  language: typescript
libraries: |
  https://appsforoffice.microsoft.com/lib/1/hosted/office.js
  @types/office-js

  office-ui-fabric-js@1.4.0/dist/css/fabric.min.css
  office-ui-fabric-js@1.4.0/dist/css/fabric.components.min.css

  core-js@2.4.1/client/core.min.js
  @types/core-js

  jquery@3.1.1
  @types/jquery@3.3.1

  https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js

  https://appsforoffice.microsoft.com/lib/1/hosted/office.js
